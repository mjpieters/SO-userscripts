// ==UserScript==
// @name Connected Users
// @description **Moderator-only**. Hightlights users in the IP cross section view that overlap in time
// @version 1.4.6
// @author Martijn Pieters
// @homepage https://github.com/mjpieters/SO-userscripts/tree/main/scripts/connected-users
// @supportURL https://github.com/mjpieters/SO-userscripts/issues?q=is:issue+is%3Aopen+label:connected-users
// @match *://stackoverflow.com/admin/xref-user-ips/*
// @match *://serverfault.com/admin/xref-user-ips/*
// @match *://superuser.com/admin/xref-user-ips/*
// @match *://askubuntu.com/admin/xref-user-ips/*
// @match *://mathoverflow.net/admin/xref-user-ips/*
// @match *://stackapps.com/admin/xref-user-ips/*
// @match *://*.stackexchange.com/admin/xref-user-ips/*
// @downloadURL https://github.com/mjpieters/SO-userscripts/raw/main/dist/connected-users.user.js
// @namespace https://github.com/mjpieters/SO-userscripts
// @updateURL https://github.com/mjpieters/SO-userscripts/raw/main/dist/connected-users.meta.js
// ==/UserScript==

(()=>{"use strict";const t="us-mod-connected-users",e=new Promise((t=>{StackExchange.ready((()=>t(null)))})),s=new Map;async function n(t,...[e]){const n=new URL(`https://api.stackexchange.com/2.3/${t}`);n.search=new URLSearchParams({...e&&{filter:e},key:"rSgJSoND0c32iHgumlM8vg((",site:location.hostname.replace(/(\.stackexchange)?\.com$/,""),pagesize:"100"}).toString();const r=(s.get(t)??0)-(new Date).getTime();var o;r>0&&await(o=r,new Promise((t=>setTimeout(t,o))));const a=await fetch(n.toString()),i=await a.json();if(s.set(t,(new Date).getTime()+(i.backoff||0)??0),i.error_id)throw new Error(`${i.error_name} (${i.error_id}): ${i.error_message}`);return i.items}function r(t){return t.replace(/(?:[_-])([a-z0-9])/g,((t,e)=>e.toUpperCase()))}const o='<svg aria-hidden="true" class="svg-icon iconEyeOffSm" width="14" height="14"  viewBox="0 0 14 14"><path  d="M3.52 7.38 1.58 9.26A12.38 12.38 0 0 1 0 7s2.63-5.14 7.05-5.14c.66 0 1.28.12 1.86.32L7.44 3.6a3.48 3.48 0 0 0-3.92 3.78ZM5.3 9.99c.5.28 1.1.44 1.71.44 1.94 0 3.5-1.53 3.5-3.43 0-.62-.17-1.21-.47-1.72L8.7 6.6a1.73 1.73 0 0 1-2.08 2.07L5.29 10Zm6.23-6.19A12.7 12.7 0 0 1 14 7s-2.63 5.14-6.95 5.14A6.1 6.1 0 0 1 4 11.3L2.27 13l-1.4-1.36L11.9 1l1.23 1.2-1.6 1.6Z"/></svg>',a='<svg aria-hidden="true" class="svg-icon iconEyeSm" width="14" height="14"  viewBox="0 0 14 14"><path  d="M7.05 2C2.63 2 0 7.5 0 7.5S2.63 13 7.05 13C11.38 13 14 7.5 14 7.5S11.37 2 7.05 2ZM7 11.17A3.59 3.59 0 0 1 3.5 7.5 3.6 3.6 0 0 1 7 3.83c1.94 0 3.5 1.65 3.5 3.67A3.57 3.57 0 0 1 7 11.17Zm0-1.84c.97 0 1.75-.81 1.75-1.83S7.97 5.67 7 5.67s-1.75.81-1.75 1.83S6.03 9.33 7 9.33Z"/></svg>';function i(t){return t.replace(/(?:[_-])([a-z0-9])/g,((t,e)=>e.toUpperCase()))}function c(t){return t.charAt(0).toUpperCase()+t.slice(1)}function l(t,e){const s=d(t);return Array.from(s.reduce(((t,s)=>(function(t,e){const s=t[e];return Array.isArray(s)?s:[]}(s,e).forEach((e=>t.add(e))),t)),new Set))}function d(t){const e=[];for(;t;)e.push(t),t=Object.getPrototypeOf(t);return e.reverse()}function u(t){return t.reduce(((t,[e,s])=>Object.assign(Object.assign({},t),{[e]:s})),{})}function h([t,e],s){return function(t){const e=`${n=t.token,n.replace(/([A-Z])/g,((t,e)=>`-${e.toLowerCase()}`))}-value`,s=function(t){const e=function(t){const e=g(t.typeObject.type);if(!e)return;const s=p(t.typeObject.default);if(e!==s){throw new Error(`The specified default value for the Stimulus Value "${t.controller?`${t.controller}.${t.token}`:t.token}" must match the defined type "${e}". The provided default value of "${t.typeObject.default}" is of type "${s}".`)}return e}({controller:t.controller,token:t.token,typeObject:t.typeDefinition}),s=p(t.typeDefinition),n=g(t.typeDefinition),r=e||s||n;if(r)return r;throw new Error(`Unknown value type "${t.controller?`${t.controller}.${t.typeDefinition}`:t.token}" for "${t.token}" value`)}(t);var n;return{type:s,key:e,name:i(e),get defaultValue(){return function(t){const e=g(t);if(e)return f[e];const s=t.default;return void 0!==s?s:t}(t.typeDefinition)},get hasCustomDefaultValue(){return void 0!==p(t.typeDefinition)},reader:b[s],writer:m[s]||m.default}}({controller:s,token:t,typeDefinition:e})}function g(t){switch(t){case Array:return"array";case Boolean:return"boolean";case Number:return"number";case Object:return"object";case String:return"string"}}function p(t){switch(typeof t){case"boolean":return"boolean";case"number":return"number";case"string":return"string"}return Array.isArray(t)?"array":"[object Object]"===Object.prototype.toString.call(t)?"object":void 0}"function"==typeof Object.getOwnPropertySymbols||Object.getOwnPropertyNames,(()=>{try{!function(){const t=function(t){function e(){return Reflect.construct(t,arguments,new.target)}return e.prototype=Object.create(t.prototype,{constructor:{value:e}}),Reflect.setPrototypeOf(e,t),e}((function(){this.a.call(this)}));t.prototype.a=function(){},new t}()}catch(t){return t=>class extends t{}}})(),Object.assign(Object.assign({enter:"Enter",tab:"Tab",esc:"Escape",space:" ",up:"ArrowUp",down:"ArrowDown",left:"ArrowLeft",right:"ArrowRight",home:"Home",end:"End"},u("abcdefghijklmnopqrstuvwxyz".split("").map((t=>[t,t])))),u("0123456789".split("").map((t=>[t,t]))));const f={get array(){return[]},boolean:!1,number:0,get object(){return{}},string:""},b={array(t){const e=JSON.parse(t);if(!Array.isArray(e))throw new TypeError(`expected value of type "array" but instead got value "${t}" of type "${p(e)}"`);return e},boolean:t=>!("0"==t||"false"==String(t).toLowerCase()),number:t=>Number(t),object(t){const e=JSON.parse(t);if(null===e||"object"!=typeof e||Array.isArray(e))throw new TypeError(`expected value of type "object" but instead got value "${t}" of type "${p(e)}"`);return e},string:t=>t},m={default:function(t){return`${t}`},array:v,object:v};function v(t){return JSON.stringify(t)}class _{constructor(t){this.context=t}static get shouldLoad(){return!0}static afterLoad(t,e){}get application(){return this.context.application}get scope(){return this.context.scope}get element(){return this.scope.element}get identifier(){return this.scope.identifier}get targets(){return this.scope.targets}get outlets(){return this.scope.outlets}get classes(){return this.scope.classes}get data(){return this.scope.data}initialize(){}connect(){}disconnect(){}dispatch(t,{target:e=this.element,detail:s={},prefix:n=this.identifier,bubbles:r=!0,cancelable:o=!0}={}){const a=new CustomEvent(n?`${n}:${t}`:t,{detail:s,bubbles:r,cancelable:o});return e.dispatchEvent(a),a}}_.blessings=[function(t){return l(t,"classes").reduce(((t,e)=>{return Object.assign(t,{[`${s=e}Class`]:{get(){const{classes:t}=this;if(t.has(s))return t.get(s);{const e=t.getAttributeName(s);throw new Error(`Missing attribute "${e}"`)}}},[`${s}Classes`]:{get(){return this.classes.getAll(s)}},[`has${c(s)}Class`]:{get(){return this.classes.has(s)}}});var s}),{})},function(t){return l(t,"targets").reduce(((t,e)=>{return Object.assign(t,{[`${s=e}Target`]:{get(){const t=this.targets.find(s);if(t)return t;throw new Error(`Missing target element "${s}" for "${this.identifier}" controller`)}},[`${s}Targets`]:{get(){return this.targets.findAll(s)}},[`has${c(s)}Target`]:{get(){return this.targets.has(s)}}});var s}),{})},function(t){const e=function(t,e){return d(t).reduce(((t,s)=>(t.push(...function(t,e){const s=t[e];return s?Object.keys(s).map((t=>[t,s[t]])):[]}(s,e)),t)),[])}(t,"values"),s={valueDescriptorMap:{get(){return e.reduce(((t,e)=>{const s=h(e,this.identifier),n=this.data.getAttributeNameForKey(s.key);return Object.assign(t,{[n]:s})}),{})}}};return e.reduce(((t,e)=>Object.assign(t,function(t,e){const s=h(t,void 0),{key:n,name:r,reader:o,writer:a}=s;return{[r]:{get(){const t=this.data.get(n);return null!==t?o(t):s.defaultValue},set(t){void 0===t?this.data.delete(n):this.data.set(n,a(t))}},[`has${c(r)}`]:{get(){return this.data.has(n)||s.hasCustomDefaultValue}}}}(e))),s)},function(t){return l(t,"outlets").reduce(((t,e)=>Object.assign(t,function(t){const e=i(t.replace(/--/g,"-").replace(/__/g,"_"));return{[`${e}Outlet`]:{get(){const e=this.outlets.find(t);if(e){const s=this.application.getControllerForElementAndIdentifier(e,t);if(s)return s;throw new Error(`Missing "data-controller=${t}" attribute on outlet element for "${this.identifier}" controller`)}throw new Error(`Missing outlet element "${t}" for "${this.identifier}" controller`)}},[`${e}Outlets`]:{get(){const e=this.outlets.findAll(t);return e.length>0?e.map((e=>{const s=this.application.getControllerForElementAndIdentifier(e,t);if(s)return s;console.warn(`The provided outlet element is missing the outlet controller "${t}" for "${this.identifier}"`,e)})).filter((t=>t)):[]}},[`${e}OutletElement`]:{get(){const e=this.outlets.find(t);if(e)return e;throw new Error(`Missing outlet element "${t}" for "${this.identifier}" controller`)}},[`${e}OutletElements`]:{get(){return this.outlets.findAll(t)}},[`has${c(e)}Outlet`]:{get(){return this.outlets.has(t)}}}}(e))),{})}],_.targets=[],_.outlets=[],_.values={};const y={debug:!1,logger:console,dispatchEvent:!0,eventPrefix:!0};(class extends _{}).debounces=[];class $ extends class{constructor(t,e={}){var s,n,r;this.log=(t,e)=>{this.debug&&(this.logger.groupCollapsed(`%c${this.controller.identifier} %c#${t}`,"color: #3B82F6","color: unset"),this.logger.log(Object.assign({controllerId:this.controllerId},e)),this.logger.groupEnd())},this.warn=t=>{this.logger.warn(`%c${this.controller.identifier} %c${t}`,"color: #3B82F6; font-weight: bold","color: unset")},this.dispatch=(t,e={})=>{if(this.dispatchEvent){const{event:s}=e,n=function(t,e){var s={};for(var n in t)Object.prototype.hasOwnProperty.call(t,n)&&e.indexOf(n)<0&&(s[n]=t[n]);if(null!=t&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(n=Object.getOwnPropertySymbols(t);r<n.length;r++)e.indexOf(n[r])<0&&Object.prototype.propertyIsEnumerable.call(t,n[r])&&(s[n[r]]=t[n[r]])}return s}(e,["event"]),r=this.extendedEvent(t,s||null,n);this.targetElement.dispatchEvent(r),this.log("dispatchEvent",Object.assign({eventName:r.type},n))}},this.call=(t,e={})=>{const s=this.controller[t];if("function"==typeof s)return s.call(this.controller,e)},this.extendedEvent=(t,e,s)=>{const{bubbles:n,cancelable:r,composed:o}=e||{bubbles:!0,cancelable:!0,composed:!0};return e&&Object.assign(s,{originalEvent:e}),new CustomEvent(this.composeEventName(t),{bubbles:n,cancelable:r,composed:o,detail:s})},this.composeEventName=t=>{let e=t;return!0===this.eventPrefix?e=`${this.controller.identifier}:${t}`:"string"==typeof this.eventPrefix&&(e=`${this.eventPrefix}:${t}`),e},this.debug=null!==(n=null!==(s=null==e?void 0:e.debug)&&void 0!==s?s:t.application.stimulusUseDebug)&&void 0!==n?n:y.debug,this.logger=null!==(r=null==e?void 0:e.logger)&&void 0!==r?r:y.logger,this.controller=t,this.controllerId=t.element.id||t.element.dataset.id,this.targetElement=(null==e?void 0:e.element)||t.element;const{dispatchEvent:o,eventPrefix:a}=Object.assign({},y,e);Object.assign(this,{dispatchEvent:o,eventPrefix:a}),this.controllerInitialize=t.initialize.bind(t),this.controllerConnect=t.connect.bind(t),this.controllerDisconnect=t.disconnect.bind(t)}}{constructor(t,e={}){super(t,e),this.observe=()=>{try{this.observer.observe(this.targetElement,this.options)}catch(t){this.controller.application.handleError(t,"At a minimum, one of childList, attributes, and/or characterData must be true",{})}},this.unobserve=()=>{this.observer.disconnect()},this.mutation=t=>{this.call("mutate",t),this.log("mutate",{entries:t}),this.dispatch("mutate",{entries:t})},this.targetElement=(null==e?void 0:e.element)||t.element,this.controller=t,this.options=e,this.observer=new MutationObserver(this.mutation),this.enhanceController(),this.observe()}enhanceController(){const t=this.controller.disconnect.bind(this.controller);Object.assign(this.controller,{disconnect:()=>{this.unobserve(),t()}})}}(class extends _{}).throttles=[];class w extends Stacks.StacksController{get container(){return this.hasContainerTarget?this.containerTarget:this.element}get children(){return Array.from(this.hasScopeSelectorValue?this.container.querySelectorAll(this.scopeSelectorValue):this.container.children)}connect(){((t,e={})=>{const s=new $(t,e);s.observe,s.unobserve})(this,{childList:!0,element:this.container}),this.checkEmpty()}mutate(){this.checkEmpty()}checkEmpty(){const t=this.children.length;0===t?(this.element.classList.remove(...this.notEmptyClasses),this.element.classList.add(...this.emptyClasses),this.dispatch("empty",{target:this.container})):(this.element.classList.add(...this.notEmptyClasses),this.element.classList.remove(...this.emptyClasses),this.dispatch("not-empty",{target:this.container,detail:{count:t}}))}}function k(t,e){const{[t]:s}=localStorage;return(t=>![null,void 0,""].includes(t))(s)?JSON.parse(s):e}w.controllerId="empty-dom",w.targets=["container"],w.classes=["empty","notEmpty"],w.values={scopeSelector:String};const x=t=>null!==t&&"object"==typeof t;function S(t,e){return x(t)?new Proxy(t,{get(t,s,n){const r=Reflect.get(t,s,n);return x(r)?S(r,e):r},set(t,s,n,r){const o=Reflect.set(t,s,n,r);return e(),o}}):t}function C(t,e=200){let s;return function(...n){clearTimeout(s),s=setTimeout((()=>t.apply(this,n)),e)}}const U={focusedUsers:[],xrefUIState:{openedSections:{[`${t}-connected-histogram`]:!0,[`${t}-connected`]:!1,[`${t}-focused`]:!1},showOnlyConnected:!1}},[E,I]=function(t,e){const s={storage:k(t,e),persist:()=>localStorage[t]=JSON.stringify(s.storage)};return[S(s.storage,C(s.persist)),()=>{const e=k(t,s.storage);for(const t of Object.keys(s.storage))s.storage[t]=e[t]}]}(t,U),L=new Intl.NumberFormat("en-US",{notation:"compact",maximumSignificantDigits:3}),T=new Intl.NumberFormat("en-US",{useGrouping:!0}),A=`.s-${t} .s-user-card { --_uc-p: 0 }`;class O{get _relativeLink(){return this.link.replace(/https?:\/\/[^/]+/,"")}get _badges(){const t=[];switch(this.is_employee&&t.push('<span class="s-badge s-badge__staff s-badge__xs">Staff</span>'),this.user_type){case"moderator":t.push('<span class="s-badge s-badge__moderator s-badge__xs">Mod</span>');break;case"team_admin":t.push('<span class="s-badge s-badge__admin s-badge__xs">Admin</span>')}return t.join(" ")}get _abbreviated_reputation(){return this.reputation<1e4?T.format(this.reputation):L.format(this.reputation).toLowerCase()}toHTML(){return`\n      <div class="s-user-card" data-uid="${this.user_id}"> \n        <a href="${this._relativeLink}" class="s-avatar s-avatar__32 s-user-card--avatar">\n          <img class="s-avatar--image" src="${this.profile_image}" />\n        </a>\n        <div class="s-user-card--info">\n          <a href="${this.link}" class="s-user-card--link"\n            >${this.display_name} ${this._badges}</a\n          >\n          <ul class="s-user-card--awards">\n            <li\n              class="s-user-card--rep"\n              title="reputation score ${T.format(this.reputation)}"\n            >\n              ${this._abbreviated_reputation}\n            </li>\n            <li class="s-award-bling s-award-bling__gold">${this.badge_counts.gold}</li>\n            <li class="s-award-bling s-award-bling__silver">${this.badge_counts.silver}</li>\n            <li class="s-award-bling s-award-bling__bronze">${this.badge_counts.bronze}</li>\n          </ul>\n        </div>\n      </div>\n    `}}class j extends O{constructor(t){super(),this.user_id=t,this.link=`/users/${t}`}toHTML(){return`\n      <div class="s-user-card s-user-card__deleted">\n        <a href="${this.link}" class="s-avatar s-avatar__32 s-user-card--avatar">\n          <span class="anonymous-gravatar s-avatar--image"></span>\n        </a>\n        <div class="s-user-card--info">\n          <a href="${this.link}" class="s-user-card--link"\n            >user${this.user_id}</a\n          >\n        </div>\n      </div>\n    `}}const M=new class{constructor(t){this.values=new Map,this.maxEntries=20,void 0!==t&&(this.maxEntries=t)}get(t){const e=this.values.get(t);return void 0!==e&&(this.values.delete(t),this.values.set(t,e)),e}put(t,e){this.values.size>=this.maxEntries&&this.values.delete(this.values.keys().next().value),this.values.set(t,e)}}(1e3);class F extends Stacks.StacksController{static afterLoad(t){document.head.insertAdjacentHTML("beforeend",`<style id="${t}-styles">${A}</style>`)}connect(){this.updateUsers()}updateUsers(){this.countTarget.innerHTML=this.userRowTargets.length.toString();const t=new Map(this.userRowTargets.reduce(((t,e)=>"true"===e.dataset.hydrated?t:[...t,[parseInt(e.dataset.uid||"0"),e]]),[]));0!==t.size&&window.requestAnimationFrame((async()=>{for await(const e of async function*(t,e=!1){let s=[];const r=new Map(t.reduce(((t,e)=>{const n=M.get(e);return n?[...t,[e,n]]:(s.push(e),t)}),[]));for(;s.length>0;){const o=s.splice(0,100);s=s.splice(100);const a=await n(`users/${o.join(";")}`,"!ACgHDY30sZUf7hsfwUhuaGWzjM9W8F5"),i=new Map(a.map((t=>[t.user_id,Object.assign(new O,t)]))),c=t.indexOf(o[o.length-1])+1;yield*t.splice(0,c).reduce(((t,s)=>{let n=r.get(s)||i.get(s);return void 0===n&&e&&(n=new j(s)),n&&M.put(s,n),n?[...t,n]:t}),[]),t=t.splice(c)}yield*t.map((t=>M.get(t)))}([...t.keys()],!0)){const s=t.get(e.user_id);if(!s)continue;const n="true"===s.dataset.userCardKeepFirst?s.querySelector(".s-user-card :first-child")?.cloneNode(!0):null,r=s.querySelector(".s-user-card");r?r.outerHTML=e.toHTML():s.innerHTML=e.toHTML();const o=s.querySelector(".s-user-card");o?.classList.add(...this.userCardClasses),n&&o?.insertAdjacentElement("afterbegin",n),s.dataset.hydrated="true"}this.dispatch("moduserquicklinks",{prefix:""}),this.dispatch("usersHydrated",{detail:this.userRowTargets.reduce(((t,e)=>null===e.querySelector("s-user-card__deleted")?[...t,parseInt(e.dataset.uid||"0")]:t),[])})}))}}F.controllerId=`${t}-user-list`,F.targets=["count","userRow"],F.classes=["userCard"];const R=`\n  .s-${t}__connected-histogram svg rect {\n    fill: var(--theme-secondary-400);\n  }\n  .s-${t}__connected-histogram svg rect.threshold,\n  .s-${t}__connected-histogram svg rect.threshold ~ rect{\n    fill: var(--theme-primary-500);\n  }\n  .s-${t}__connected-histogram svg rect:hover {\n    fill: var(--theme-primary-300) !important;\n  }\n  .s-${t}__connected-histogram svg .gridLines {\n    stroke: var(--black-150);\n  }\n  `;function H(t){const e=window.getComputedStyle(t);return{width:t.clientWidth-parseFloat(e.paddingLeft)-parseFloat(e.paddingRight),height:t.clientHeight-parseFloat(e.paddingTop)-parseFloat(e.paddingBottom)}}class q extends Stacks.StacksController{constructor(){super(...arguments),this._buckets=[],this._logScale=!1}static afterLoad(t){document.head.insertAdjacentHTML("beforeend",`<style id="${t}-styles">${R}</style>`)}connect(){this.svgTarget.addEventListener("click",this._propagateEvent.bind(this)),this.svgTarget.addEventListener("hover",this._propagateEvent.bind(this))}disconnect(){this.svgTarget.removeEventListener("click",this._propagateEvent.bind(this)),this.svgTarget.removeEventListener("hover",this._propagateEvent.bind(this))}get _svgRatio(){if(void 0===this._svgRatioCache)for(const t of function*(t){const e=[];for(let s=t;0===s?.clientWidth;s=s?.parentElement)e.unshift(s);const s=[];for(const t of e){if(0!==t.clientWidth)break;const e=t.classList;e.contains("d-none")&&(e.remove("d-none"),s.push(((t=e)=>t.add("d-none")))),e.contains("s-expandable")&&!e.contains("is-expanded")&&s.push(((t=e)=>t.remove("is-expanded")))}try{yield}finally{for(const t of s)t()}}(this.svgTarget)){const t=H(this.svgTarget);this._svgRatioCache=t.height/t.width}return this._svgRatioCache}_adjustThresholdClasses(t){this.svgTarget.querySelectorAll(".threshold").forEach((t=>t.classList.remove("threshold"))),this.svgTarget.querySelector(`rect[data-bucket-conn-count="${t}"]`)?.classList.add("threshold")}_propagateEvent(t){const e=t.target.dataset.bucketIndex;if(void 0===e)return;const s=this._buckets[parseInt(e)];"click"===t.type&&this._adjustThresholdClasses(s.connCount),this.dispatch(t.type,{detail:s})}setFrequencies(t,e=!0){if(this.svgTarget.replaceChildren(),this._buckets=[],0===t.length)return;const s=t[t.length-1].count,n=t[0].count;for(let t=s;t<=n;t++)this._buckets.push({connCount:t,userCount:0,label:`Overlapping on ${t} ip(s)`});if(t.forEach((({count:t})=>this._buckets[t-s].userCount+=1)),this._buckets.length>20){const t=Math.ceil(this._buckets.length/20),e=[];for(let s=0;s<this._buckets.length;s+=t){const n=this._buckets[s].connCount,r=this._buckets[Math.min(this._buckets.length,s+t)-1].connCount,o=this._buckets.slice(s,s+t).reduce(((t,{userCount:e})=>t+e),0);e.push({connCount:n,userCount:o,label:n!==r?`Overlapping ${n}-${r} ip(s)`:`Overlapping ${n} ip(s)`})}this._buckets=e}const[r,o]=this._buckets.reduce((([t,e],{userCount:s})=>[Math.min(t,Math.max(s,1)),Math.max(e,s)]),[1/0,1]);this._logScale=o>10*r,console.log("Histogram scale uses log?",this._logScale),this._buckets.length<=1||(this._drawBarChart(),this._adjustThresholdClasses(this._buckets[0].connCount),e&&this.dispatch("click",{detail:this._buckets[0]}))}_drawBarChart(){const t=5*this._buckets.length+1,e=t*this._svgRatio;this.svgTarget.setAttribute("viewBox",`0 0 ${t} ${e}`);const s=this._logScale?t=>t>0?Math.log10(t)||.15:t:t=>t,n=Math.max(...this._buckets.map((({userCount:t})=>t))),r=e/s(n),o=.005*e;this.svgTarget.insertAdjacentHTML("beforeend",`<g stroke-width="${o}" class="gridLines">\n        <defs><line id="gridLine" x1="0" x2="${t}" y1="0" y2="0" /></defs>\n        <use href="#gridLine" />\n       </g>`);const a=this.svgTarget.querySelector("g.gridLines"),i=this._logScale?t=>Math.pow(10,Math.floor(Math.log10(t||1))):(t,e=Math.max(Math.floor(n/10),1))=>e;let c=0;for(;c<n;){const t=e-s(c)*r;a.insertAdjacentHTML("beforeend",`<use href="#gridLine" y="${t}" />`),c+=i(c)}this._buckets.forEach(((t,n)=>{const o=s(t.userCount)*r,a=`\n        <rect\n          width="4" height="${o}"\n          x="${5*n+1}"\n          y="${e-o}"\n          data-bucket-index="${n}"\n          data-bucket-conn-count="${t.connCount}"\n        >\n          <title>${t.label}: ${t.userCount} account${1===t.userCount?"":"s"}</title>\n        </rect>\n       `;this.svgTarget.insertAdjacentHTML("beforeend",a)}))}}q.controllerId=`${t}-histogram`,q.targets=["svg"];const D="s-mainUser",P="s-known",Z="s-overlap",B=`\n  [data-controller="${t}-ip-group"] tr[data-uid].s-mainUser {\n    background: var(--green-300);\n  }\n  [data-controller="${t}-ip-group"] tr[data-uid].s-known {\n    background: var(--gold-lighter);\n  }\n  [data-controller="${t}-ip-group"] tr[data-uid].s-mainUser.s-known {\n    background: var(--green-100) !important;\n  }\n  [data-controller="${t}-ip-group"] tr[data-uid].s-overlap {\n    background: var(--orange-200);\n  }\n  [data-controller="${t}-ip-group"] tr[data-uid] .s-btn {\n    display: none;\n  }\n  [data-controller="${t}-ip-group"] tr[data-uid].s-known:hover .s-focus-rm-btn, \n  [data-controller="${t}-ip-group"] tr[data-uid].s-known:focus .s-focus-rm-btn { \n    display: block;\n    background-color: var(--_bu-bg-hover);\n  }\n  [data-controller="${t}-ip-group"] tr[data-uid]:hover .s-focus-add-btn, \n  [data-controller="${t}-ip-group"] tr[data-uid]:focus .s-focus-add-btn { \n    display: block;\n    background-color: var(--_bu-bg-hover);\n  }\n  [data-controller="${t}-ip-group"] tr[data-uid].s-known:hover .s-focus-add-btn, \n  [data-controller="${t}-ip-group"] tr[data-uid].s-known:focus .s-focus-add-btn { \n    display: none !important;\n  }\n`,N=`\n<span class="ps-absolute h0">\n  <button class="s-btn s-btn__icon s-btn__xs s-focus-add-btn ps-relative l96 tn4"\n          data-controller="s-tooltip"\n          data-action="${t}#addFocusUser"\n          title="Add this user to the focused accounts list"\n    >${a} <span class="md:d-none">Focus</span></button></span>\n<span class="ps-absolute h0">\n  <button class="s-btn s-btn__icon s-btn__xs s-btn__danger s-focus-rm-btn ps-relative l96 tn4"\n          data-controller="s-tooltip"\n          data-action="${t}#removeFocusUser"\n          title="Remove this user from the focused accounts list"\n    >${o} <span class="md:d-none">Remove</span></button></span>\n`;function V(t){return luxon.Interval.fromDateTimes.apply(this,Array.from(t.querySelectorAll("td .relativetime[title]")).map((t=>{return e=t.title,luxon.DateTime.fromISO(e.replace(" ","T"),{zone:"utc"});var e})))}class z extends Stacks.StacksController{constructor(){super(...arguments),this._refreshId=null}static afterLoad(t,e){e.logDebugActivity(t,"afterLoad"),document.head.insertAdjacentHTML("beforeend",`<style id="${t}-styles">${B}</style>`)}get _userRows(){return Array.from(this.element.querySelectorAll("tbody > tr[data-uid]"))}get _mainUserRow(){return this.element.querySelector("tbody .s-mainUser")}get _focusUserRows(){const t=new Set(E.focusedUsers);return this._userRows.filter((e=>t.has(parseInt(e.dataset.uid||"0"))))}get _focusIntervals(){return[this._mainUserRow,...this._focusUserRows].map((t=>V(t)))}get _connectedUserRows(){const t=this._focusIntervals,e=new Set(E.focusedUsers);return this._userRows.filter((s=>{if(s.classList.contains(D))return!1;const n=parseInt(s.dataset.uid||"0");if(e.has(n))return!1;const r=V(s);return t.some((t=>t.overlaps(r)))}))}get connectedUsers(){return this._connectedUserRows.map((t=>parseInt(t.dataset.uid||"0")))}_updateMarkup(){this.element.querySelectorAll("tbody tr").forEach((t=>{const e=t.querySelector("td a");t.dataset.uid=e?.href.split("/").pop()||"0"}));const t=location.pathname.split("/").pop()||"0";this.element.querySelector(`tr[data-uid="${t}"]`)?.classList.add(D)}connect(){this._updateMarkup(),this._belowThreshold=new Set,this._showOnlyConnected=E.xrefUIState.showOnlyConnected,this._addFocusButtons(),this._updateClasses()}_addFocusButtons(){this._userRows.forEach((e=>{const s=e.dataset.uid||"0",n=`${r(t)}UidParam`;e.querySelector("td a")?.insertAdjacentHTML("beforebegin",N),e.querySelectorAll("td .s-btn[data-action]").forEach((t=>t.dataset[n]=s))}))}_updateClasses(){if(this._userRows.forEach((t=>{t.classList.remove(P,Z,"d-none"),delete t.dataset.connected})),this._focusUserRows.forEach((t=>{t.classList.add(P)})),this._connectedUserRows.forEach((t=>{const e=parseInt(t.dataset.uid||"0");t.classList.toggle(Z,!this._belowThreshold.has(e))})),this._showOnlyConnected){const t=[D,P,Z];this._userRows.forEach((e=>{t.some((t=>e.classList.contains(t)))||e.classList.add("d-none")}))}}refresh(t){void 0!==t&&(this._showOnlyConnected=t),null===this._refreshId&&(this._refreshId=window.requestAnimationFrame((()=>{this._updateClasses(),this._refreshId=null})))}updateUsersBelowThreshold(t,e){this._belowThreshold=new Set(e.reduce(((e,{uid:s,count:n})=>n<t?[...e,s]:e),[])),this._updateClasses()}}z.controllerId=`${t}-ip-group`;const G="tr.odd, tr.even, tr.ip-group",J=`.s-${t}__connected-histogram`,W=`\n.s-${t} .s-btn__copy.is-copied .v-hidden {\n  visibility: inherit !important;\n}\n`,K=`\n<div class="s-${t} ps-sticky h0 t0 d-grid z-nav"\n     data-action="storage@window->${t}#reloadPreferences">\n  <div id="${t}" role="navigation" aria-label="Connected users"\n       class="o50 h:o100 f:o100 ws3 s-sidebarwidget ps-relative t128 l16">\n\n    <div data-controller="${w.controllerId}"\n         data-${w.controllerId}-empty-class="d-none"\n      >\n      <h2 class="s-sidebarwidget--header s-sidebarwidget__small-bold-text\n                s-sidebarwidget__expanding-control"\n          aria-expanded="false"\n          aria-controls="${t}-connected-histogram"\n          aria-label="toggle connected users histogram"\n          data-controller="s-expandable-control"\n          data-action="\n            s-expandable-control:show->${t}#sectionToggled\n            s-expandable-control:hide->${t}#sectionToggled\n          "\n          tabindex="0">\n        <span>Connected users histogram</span>\n      </h2>\n      <div class="s-expandable s-${t}__connected-histogram"\n          data-controller="${q.controllerId}"\n          data-action="${q.controllerId}:click->${t}#showConnected"\n          id="${t}-connected-histogram"\n        >\n        <div class="s-expandable--content">\n          <svg xmlns="http://www.w3.org/2000/svg"\n              class="s-sidebarwidget--content w100 hs1"\n              data-${q.controllerId}-target="svg"\n              data-${w.controllerId}-target="container"\n              ></svg>\n        </div>\n      </div>\n    </div>\n\n    <div data-controller="${w.controllerId} ${F.controllerId}"\n         data-${w.controllerId}-empty-class="d-none"\n         data-action="${w.controllerId}:not-empty->${F.controllerId}#updateUsers"\n      >\n      <h2 class="s-sidebarwidget--header s-sidebarwidget__small-bold-text\n                s-sidebarwidget__expanding-control"\n          aria-expanded="false"\n          aria-controls="${t}-connected"\n          aria-label="toggle connected users"\n          data-controller="s-expandable-control"\n          data-action="\n            s-expandable-control:show->${t}#sectionToggled\n            s-expandable-control:hide->${t}#sectionToggled\n          "\n          tabindex="0">\n        <div class="s-check-control s-sidebarwidget--action"\n            data-action="click->${t}#toggleOnly:stop"\n            data-controller="s-tooltip"\n            title="Hide all users not connected to the focus account(s)"\n          >\n          <label class="s-label s-label__sm" for="${t}-toggle-only-connected">Only</label>\n          <input class="s-checkbox" type="checkbox"\n            id="${t}-toggle-only-connected"\n            />\n        </div>\n        <span data-${F.controllerId}-target="count">0</span> Connected users\n      </h2>\n      <div class="s-expandable" id="${t}-connected">\n        <div class="s-expandable--content">\n          <div class="s-sidebarwidget--content\n                      s-sidebarwidget__items\n                      overflow-y-auto\n                      hmx2\n                     "\n               data-${w.controllerId}-target="container"\n               data-${t}-target="connectedUsers"\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div data-controller="${w.controllerId} ${F.controllerId}"\n         data-${w.controllerId}-empty-class="d-none"\n         data-action="\n             ${w.controllerId}:not-empty->${F.controllerId}#updateUsers\n             ${F.controllerId}:usersHydrated->${t}#updateFocusUsersGraphLink\n             "\n      >\n      <h2 class="s-sidebarwidget--header s-sidebarwidget__small-bold-text\n                s-sidebarwidget__expanding-control"\n          aria-expanded="false"\n          aria-controls="${t}-focused"\n          aria-label="toggle focused users"\n          data-controller="s-expandable-control"\n          data-action="\n            s-expandable-control:show->${t}#sectionToggled\n            s-expandable-control:hide->${t}#sectionToggled\n          "\n          tabindex="0">\n        <button class="\n              s-sidebarwidget--action\n              s-btn s-btn__icon s-btn__danger s-btn__xs s-btn__link fc-danger\n              "\n            data-controller="s-tooltip"\n            data-action="${t}#clearFocusUsers:stop"\n            title="Clear the list of focus accounts"\n        ><svg aria-hidden="true" class="svg-icon iconTrashSm" width="14" height="14"  viewBox="0 0 14 14"><path  d="M11 2a1 1 0 0 1 1 1v1H2V3a1 1 0 0 1 1-1h2a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h2Zm0 3H3v6c0 1.1.9 2 2 2h4a2 2 0 0 0 2-2V5Z"/></svg><span class="v-visible-sr">Clear</button>\n        <a class="\n              s-sidebarwidget--action\n              s-btn s-btn__icon s-btn__xs p0\n              "\n            data-controller="s-tooltip"\n            data-${t}-target="focusUsersGraphLink"\n            data-action="${t}#openFocusUsersGraph:stop"\n            title="IP activity graph for focus accounts"\n            target="_blank"\n            href="/admin/user-activity"\n        ><svg aria-hidden="true" class="svg-icon iconReputationSm" width="14" height="14"  viewBox="0 0 14 14"><path  d="M9.67 1.5a1 1 0 0 1 .86-.5H12a1 1 0 1 1 0 2h-.89L9.67 5.5a1 1 0 0 1-.87.5H6.62l-3.23 6.45a1 1 0 1 1-1.78-.9l3.5-7A1 1 0 0 1 6 4h2.22l1.45-2.5Z"/><path  d="M1 2a1 1 0 0 1 1-1h5a1 1 0 0 1 0 2H2a1 1 0 0 1-1-1Zm0 3a1 1 0 1 1 2 0 1 1 0 0 1-2 0Zm11-1a1 1 0 1 0 0 2 1 1 0 0 0 0-2ZM8 8a1 1 0 0 1 1-1h3a1 1 0 1 1 0 2H9a1 1 0 0 1-1-1Zm-1 2a1 1 0 1 0 0 2h5a1 1 0 1 0 0-2H7Z" opacity=".2"/></svg><span class="v-visible-sr">Clear</a>\n        <button class="\n              s-sidebarwidget--action\n              s-btn s-btn__icon s-btn__xs s-btn__link\n              s-btn__copy\n              "\n            data-controller="s-tooltip"\n            data-action="${t}#copyFocusUsers:stop"\n            title="Copy the list of focus users to the clipboard"\n        ><svg aria-hidden="true" class="svg-icon iconShareSm" width="14" height="14"  viewBox="0 0 14 14"><path  d="M5 1H3a2 2 0 0 0-2 2v8c0 1.1.9 2 2 2h8a2 2 0 0 0 2-2V9h-2v2H3V3h2V1Zm2 0h6v6h-2V4.5L6.5 9 5 7.5 9.5 3H7V1Z"/></svg><span\n            class="fc-success bg-black-025 ps-absolute l0 v-hidden"\n        ><svg aria-hidden="true" class="svg-icon iconCheckmarkSm" width="14" height="14"  viewBox="0 0 14 14"><path  d="M13 3.41 11.59 2 5 8.59 2.41 6 1 7.41l4 4 8-8Z"/></svg></span><span class="v-visible-sr">Copy</span></button>\n        <span data-${F.controllerId}-target="count">0</span> Focused users\n      </h2>\n      <div class="s-expandable" id="${t}-focused">\n        <div class="s-expandable--content">\n          <div class="s-sidebarwidget--content\n                      s-sidebarwidget__items\n                      overflow-y-auto\n                      hmx2\n                     "\n               data-${w.controllerId}-target="container"\n               data-${t}-target="focusedUsers"\n            >\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n`;function X(t){return t.toFormat("yyyy/MM/dd")}class Y extends Stacks.StacksController{constructor(){super(...arguments),this._threshold=0,this._refreshId=null}get _ipGroups(){return this[function({controllerId:t}){return`${r(`${t}`)}Outlets`}(z)]}get _histogram(){return this[function({controllerId:t}){return`${r(`${t}`)}Outlet`}(q)]}static attach(t){const e=document.querySelector(t),s=Array.from(e.querySelectorAll(G)).filter((t=>null!==t.querySelector("tbody")));Stacks.application.logDebugActivity(this.controllerId,"attach",{controllersToRegister:[this.controllerId,z.controllerId],hasXrefsTable:!!e,ipGroupsCount:s.length}),Stacks.application.register(z.controllerId,z),e.setAttribute(Stacks.application.schema.targetAttributeForScope(this.controllerId),"xrefsTable"),s.forEach((t=>t.dataset.controller=z.controllerId));const n=e.parentElement,r=(n.dataset.controller??"").split(" ");r.push(this.controllerId),n.dataset.controller=r.join(" ").trim(),n.setAttribute(Stacks.application.schema.outletAttributeForScope(this.controllerId,z.controllerId),G),n.setAttribute(Stacks.application.schema.outletAttributeForScope(this.controllerId,q.controllerId),J),Stacks.application.register(this.controllerId,this)}static afterLoad(t,e){const s=[q,w,F];e.logDebugActivity(t,"afterLoad",{controllersToRegister:s.map((t=>t.controllerId))});for(const t of s)e.register(t.controllerId,t);document.head.insertAdjacentHTML("beforeend",`<style id="${t}-styles">${W}</style>`)}get _uiDiv(){let e=this.element.querySelector(`.s-${this.identifier}`);if(null===e){const s=document.createElement("div");s.insertAdjacentHTML("afterbegin",K);const n=s.firstElementChild;n.querySelectorAll('[data-controller="s-expandable-control"]').forEach((t=>{const e=t.getAttribute("aria-controls");e&&E.xrefUIState.openedSections[e]&&(t.setAttribute("aria-expanded","true"),n.querySelector(`#${e}`)?.classList.add("is-expanded"))})),n.querySelector(`#${t}-toggle-only-connected`)?.toggleAttribute("checked",E.xrefUIState.showOnlyConnected),e=n}return e}get _connectedUsers(){const t=new Map;return this._ipGroups.forEach((e=>e.connectedUsers.forEach((e=>t.set(e,(t.get(e)??0)+1))))),[...t.entries()].map((([t,e])=>({uid:t,count:e}))).sort((({uid:t,count:e},{uid:s,count:n})=>n-e||t-s))}connect(){this.element.insertAdjacentElement("afterbegin",this._uiDiv),this._updateConnectedUsersList(this._connectedUsers),this._updateFocusedUsersList()}[function({controllerId:t}){return`${r(t)}OutletConnected`}(q)](t){t.setFrequencies(this._connectedUsers)}reloadPreferences(){I(),this._refresh()}showConnected({detail:{connCount:t}}){t!==this._threshold&&(this._threshold=t,this._refreshConnectedUsers(this._connectedUsers))}toggleOnly({target:t}){E.xrefUIState.showOnlyConnected=t.checked,this._ipGroups.forEach((e=>e.refresh(t.checked)))}sectionToggled({target:t}){const e=t.getAttribute("aria-controls");e&&Object.hasOwn(E.xrefUIState.openedSections,e)&&(E.xrefUIState.openedSections[e]="true"===t.getAttribute("aria-expanded"))}addFocusUser({params:{uid:t}}){const e=E.focusedUsers.length;E.focusedUsers=Array.from(new Set([...E.focusedUsers,t])).sort(((t,e)=>t-e)),E.focusedUsers.length!==e&&this._refresh()}removeFocusUser({params:{uid:t}}){const e=E.focusedUsers.length;E.focusedUsers=E.focusedUsers.filter((e=>e!==t)),E.focusedUsers.length!==e&&this._refresh()}clearFocusUsers(){confirm("Clear all focused users?")&&E.focusedUsers.length>0&&(E.focusedUsers=[],this._refresh())}copyFocusUsers({target:t}){const e=E.focusedUsers.map((t=>{const e=this.focusedUsersTarget.querySelector(`a[href^="/users/${t}/"]`);return e?e.href.replace(/.*\/users\//,""):t.toFixed(0)})).join("\n"),s=t.closest("button");navigator.clipboard.writeText(e).then((()=>(s?.classList.add("is-copied"),new Promise((t=>setTimeout(t,1500)))))).then((()=>s?.classList.remove("is-copied")))}updateFocusUsersGraphLink({detail:t}){const e=luxon.DateTime.utc(),s=e.minus({days:14}),n=this.focusUsersGraphLinkTarget,r=new URL(n.href);r.hash=`${X(s)}|${X(e)}|${t.join(",")}`,n.href=r.toString()}_refresh(){null===this._refreshId&&(this._refreshId=window.requestAnimationFrame((()=>{this._threshold=0,this._updateFocusedUsersList();const t=this._connectedUsers;this._histogram.setFrequencies(t,!1),this._refreshConnectedUsers(t),this._refreshId=null})))}_refreshConnectedUsers(t){this._ipGroups.forEach((e=>e.updateUsersBelowThreshold(this._threshold,t))),this._updateConnectedUsersList(t)}_updateConnectedUsersList(e){const s=()=>{const s=this.connectedUsersTarget;s.replaceChildren(),e.forEach((({uid:e,count:n})=>{if(n<this._threshold)return;const r=`Overlaps on ${n} IP${1!==n?"s":""}`;s.insertAdjacentHTML("beforeend",`<div class="s-sidebarwidget--item ai-center"\n              data-uid="${e}"\n              data-${F.controllerId}-target="userRow"\n              data-user-card-keep-first="true"\n          >\n            <div class="s-user-card" data-uid="${e}">\n              <span class="s-user-card--time">${r}</span>\n              <span class="s-avatar s-avatar__32 s-user-card--avatar">\n                <span class="anonymous-gravatar s-avatar--image"></span>\n              </span>\n              <div class="s-user-card--info">user${e}</div>\n            </div>\n            <div class="s-user-actions ml-auto">\n              <button class="s-btn s-btn__icon s-btn__xs"\n                      data-controller="s-tooltip"\n                      data-action="${t}#addFocusUser"\n                      data-${t}-uid-param="${e}" \n                      title="Add this user to the focused accounts list"\n                >\n                  ${a}\n                  <span class="md:d-none">Focus</span>\n                </button>\n            </div>\n          </div>`)}))};null===this._refreshId?window.requestAnimationFrame(s):s()}_updateFocusedUsersList(){const e=this.focusedUsersTarget;e.replaceChildren(),E.focusedUsers.forEach((s=>{e.insertAdjacentHTML("beforeend",`<div class="s-sidebarwidget--item"\n              data-uid="${s}"\n              data-${F.controllerId}-target="userRow"\n          >\n            <div class="s-user-card">\n              <span class="s-avatar s-avatar__32 s-user-card--avatar">\n                <span class="anonymous-gravatar s-avatar--image"></span>\n              </span>\n              <div class="s-user-card--info">user${s}</div>\n            </div>\n            <div class="s-user-actions ml-auto">\n              <button class="s-btn s-btn__icon s-btn__xs s-btn__danger"\n                      data-controller="s-tooltip"\n                      data-action="${t}#removeFocusUser"\n                      data-${t}-uid-param="${s}" \n                      title="Remove this user from the focused accounts list"\n                >${o}\n                  <span class="md:d-none">Remove</span>\n                </button>\n            </div>\n          </div>\n        </div>`)}))}}var Q;Y.controllerId=t,Y.targets=["xrefsTable","connectedUsers","focusedUsers","focusUsersGraphLink"],Y.outlets=[q.controllerId,z.controllerId],new URL(location.href).searchParams.has("usModDebug")&&(Stacks.application.debug=!0),Stacks.application.logDebugActivity(t,"pre-flight",{isModerator:StackExchange.options.user.isModerator}),StackExchange.options.user.isModerator&&(Stacks.application.logDebugActivity(t,"xrefUsersView",{location:location.pathname}),location.pathname.includes("/admin/xref-user-ips/")&&Promise.all([e,(Q="https://cdn.jsdelivr.net/npm/luxon@3/build/global/luxon.min.js",new Promise((function(t,e){if(null!==document.querySelector(`script[src='${Q}']`))return t();const s=document.createElement("script");s.onload=()=>t(),s.onerror=t=>e(t.error),s.src=Q,document.head.appendChild(s)})))]).then((()=>{Y.attach("#xref-ids")})))})();